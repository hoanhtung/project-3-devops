trigger:
  - main

name: Azure Pipelines
variables:
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.7.13'
  poolName: 'myAgentPool'
  serviceConn: 'myserviceconn1234'

stages:
  - stage: Provision
    displayName: Provision stage
    jobs:
      - job: TerraformProvisionJob
        pool: $(poolName)
        steps:
          - checkout: self
          - bash: ls $(System.DefaultWorkingDirectory)/terraform

          - task: TerraformTaskV2@2
            displayName: 'Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              commandOptions: '-reconfigure'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              backendServiceArm: '$(serviceConn)'
              backendAzureRmResourceGroupName: 'Azuredevops'
              backendAzureRmStorageAccountName: 'tungstorage989'
              backendAzureRmContainerName: 'tungcontainer'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV2@2
            displayName: 'Apply'
            inputs:
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              allowTelemetryCollection: true

# stages:
# - stage: Build
#   jobs:
#   - job: Build
#     pool:
#       name: $(poolName)
#     steps:
# #     Needed for Terraform VM deployment
#      - task: InstallSSHKey@0
#        inputs:
#          knownHostsEntry: 'KNOWN_HOSTS_STRING'
#          sshPublicKey: 'PUBLIC_KEY'
#          sshKeySecureFile: 'id_rsa'
#     - task: ArchiveFiles@2
#       displayName: 'Archive FakeRestAPI'
#       inputs:
#         rootFolderOrFile: 'path/to/fakerestapi'
#         includeRootFolder: false
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
#     - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
#       displayName: 'Upload Package'
#       artifact: drop-fakerestapi

# - stage: Deployment
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     environment: 'TEST'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: ''
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
#   # - deployment: VMDeploy
#   #   displayName: NAME
#   #   environment:
#   #     name:  ENVIRONMENT NAME
#   #     resourceType: VirtualMachine
#   #     tags: TAG NAME
#   #   strategy:
#   #     runOnce:
#   #       deploy:
#   #         steps:
#   #         - task: Bash@3
#   #           inputs:
#   #             targetType: 'inline'
#   #             script: |
#   #               #! /bin/bash

#   #               sudo apt-get upgrade -y
#   #               sudo apt-get install python3-pip -y
#   #               sudo apt-get install unzip -y
#   #               sudo apt-get install -y chromium-browser
#   #               pip3 install selenium
#   #               export PATH=$PATH:some/path


